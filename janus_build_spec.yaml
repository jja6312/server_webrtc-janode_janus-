version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash

env:
  variables:
    APP_NAME: "nodejs-janus-app"
    NODE_VERSION: "18.19.0"
    NODE_PREFIX: "/usr/local/node"          # 전역 설치 위치

steps:
  # 1) 공용 이미지 세팅 ‑ Node 18 + 최신 gcc
  - type: Command
    name: "Prepare build toolchain"
    command: |
      # ‑e : 에러 발생 시 즉시 종료
      # ‑x : 실행되는 모든 명령 echo
      # ‑o pipefail : 파이프라인 일부 실패 시 전체 실패
      set -euo pipefail
      set -x

      echo "### Step 1) yum-utils & repo 메타‑패키지"
      yum install -y yum-utils
      yum install -y oraclelinux-developer-release-el7 || true  # 이미 있으면 계속

      echo "### Step 2) 사용 가능한 repo 목록"
      yum repolist all | grep -E 'developer|software_collections|optional' || true

      echo "### Step 3) 개발/SCL repo enable"
      yum-config-manager --enable ol7_developer || true
      yum-config-manager --enable ol7_software_collections || true
      yum-config-manager --enable ol7_optional_latest || true
      yum clean all
      yum makecache fast

      echo "### Step 4) devtoolset 설치 2가지 경로 시도"
      # Oracle Linux 7: 두 이름 중 하나만 존재합니다.
      if yum list available devtoolset-11\* >/dev/null 2>&1; then
          yum install -y devtoolset-11 devtoolset-11-gcc devtoolset-11-gcc-c++
      elif yum list available gcc-toolset-11\* >/dev/null 2>&1; then
          yum install -y gcc-toolset-11 gcc-toolset-11-gcc gcc-toolset-11-gcc-c++
      else
          echo "### ❌ GCC 11 패키지가 보이지 않습니다. repo enable 여부를 확인하세요."
          exit 1
      fi

      echo "### Step 5) gcc 확인"
      source /opt/rh/*toolset-11*/enable
      gcc -v

      echo "### Step 6) Node ${NODE_VERSION} 설치"
      curl -fsSL https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz -o /tmp/node.tar.xz
      mkdir -p ${NODE_PREFIX}
      tar -xf /tmp/node.tar.xz -C ${NODE_PREFIX} --strip-components=1
      ln -sf ${NODE_PREFIX}/bin/* /usr/local/bin/
      node -v



  # 2) 애플리케이션 의존성 설치 (devtoolset‑11 활성화)
  - type: Command
    name: "Install OS libs & build Node modules"
    command: |
      set -e
      # 최신 gcc 활성화
      source /opt/rh/devtoolset-11/enable
      export CC=gcc CXX=g++
      echo "==> gcc version: $(gcc -v 2>&1 | tail -1)"
      echo "==> node version: $(node -v)"

      echo "==> Janus/Janode native deps"
      yum install -y \
        libmicrohttpd-devel jansson-devel openssl-devel libsrtp-devel \
        sofia-sip-devel glib2-devel opus-devel libogg-devel libcurl-devel \
        lua-devel libconfig-devel pkgconfig gengetopt libtool automake \
        make gcc gcc-c++ mysql-devel nice-devel

      echo "==> npm install"
      cd media_app/janode
      npm ci                       # reproducible build

  # 3) 배포 아티팩트 패키징
  - type: Command
    name: "Package artifact"
    command: |
      set -e
      mkdir -p ${OCI_WORKSPACE_DIR}/deployment
      cp -r media_app ${OCI_WORKSPACE_DIR}/deployment/
      cd ${OCI_WORKSPACE_DIR}/deployment
      tar -czf nodejs-janus-app.tar.gz media_app

outputArtifacts:
  - name: nodejs-janus-app-artifact
    type: BINARY
    location: ${OCI_WORKSPACE_DIR}/deployment/nodejs-janus-app.tar.gz
